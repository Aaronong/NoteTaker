# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2017-04-01 22:41
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Authorization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(3)])),
            ],
        ),
        migrations.CreateModel(
            name='DeleteComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delete_start', models.IntegerField()),
                ('delete_end', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='InsertComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=500)),
                ('insert_position', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_text', models.CharField(max_length=5000)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Notebook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='NoteUser',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Tagging',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initiator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagging', to='notetaker.NoteUser')),
                ('note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notetaker.Note')),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_text', models.CharField(max_length=20)),
                ('note_ids', models.ManyToManyField(through='notetaker.Tagging', to='notetaker.Note')),
            ],
        ),
        migrations.CreateModel(
            name='TextComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=500)),
                ('comment_position', models.IntegerField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notetaker.NoteUser')),
                ('note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notetaker.Note')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='tagging',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notetaker.Tags'),
        ),
        migrations.AddField(
            model_name='notebook',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notetaker.NoteUser'),
        ),
        migrations.AddField(
            model_name='note',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notetaker.NoteUser'),
        ),
        migrations.AddField(
            model_name='note',
            name='document',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notetaker.Document'),
        ),
        migrations.AddField(
            model_name='insertcomment',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notetaker.NoteUser'),
        ),
        migrations.AddField(
            model_name='insertcomment',
            name='note',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notetaker.Note'),
        ),
        migrations.AddField(
            model_name='document',
            name='notebook',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notetaker.Notebook'),
        ),
        migrations.AddField(
            model_name='document',
            name='permissions',
            field=models.ManyToManyField(through='notetaker.Authorization', to='notetaker.NoteUser'),
        ),
        migrations.AddField(
            model_name='deletecomment',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notetaker.NoteUser'),
        ),
        migrations.AddField(
            model_name='deletecomment',
            name='note',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notetaker.Note'),
        ),
        migrations.AddField(
            model_name='authorization',
            name='document',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notetaker.Document'),
        ),
        migrations.AddField(
            model_name='authorization',
            name='initiator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authorizing', to='notetaker.NoteUser'),
        ),
        migrations.AddField(
            model_name='authorization',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notetaker.NoteUser'),
        ),
    ]
